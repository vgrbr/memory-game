{"version":3,"sources":["Card.js","Board.js","Score.js","Table.js","symbols.js","state.js","App.js","index.js"],"names":["baseCard","css","flippedCard","cardSide","cardSideBack","props","flipped","onClick","flipCard","index","symbol","style","background","borderRadius","padding","display","flexFlow","maxWidth","margin","perspective","Board","board","cards","map","card","Card","key","position","opened","indexOf","matches","textAlign","color","lineHeight","Score","total","moves","restartGame","role","aria-label","Table","children","shuffleCards","symbols","shuffle","initialState","SYMBOLS","gameReducer","state","action","type","payload","tick","length","Error","App","React","useReducer","game","dispatch","useCallback","clickCard","useEffect","timer","setTimeout","clearTimeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b38eb2f3.chunk.js","sourcesContent":["/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\n\nconst baseCard = css`\n  width: 100px;\n  height: 100px;\n  text-align: center;\n  border: 2px solid #fff;\n  margin: 10px;\n  border-radius: 5px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: transform 1s;\n  transformstyle: preserve-3d;\n  cursor: pointer;\n`;\n\nconst flippedCard = css`\n  transform: rotateY(180deg);\n`;\n\nconst cardSide = css`\n  transition: transform 1s;\n  transform-style: preserve-3d;\n  color: white;\n  width: 100%;\n  backface-visibility: hidden;\n  font-size: 80px;\n`;\n\nconst cardSideBack = css`\n  background: #fff;\n`;\n\nexport default function(props) {\n  return (\n    <div\n      css={[baseCard, props.flipped && flippedCard]}\n      onClick={props.flipCard(props.index)}\n    >\n      <span css={[cardSide, props.flipped && cardSideBack]}>\n        {props.flipped ? props.symbol : \"✮\"}\n      </span>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Card from \"./Card\";\n\nconst style = {\n  background: \"#009951\",\n  borderRadius: \"15px\",\n  padding: 20,\n  display: \"flex\",\n  flexFlow: \"row wrap\",\n  maxWidth: \"500px\",\n  margin: \"0 auto\",\n  perspective: \"800px\"\n};\n\nexport default function Board({ board, flipCard }) {\n  return (\n    <div style={style}>\n      {board.cards.map((card, index) => (\n        <Card\n          key={index}\n          symbol={card.symbol}\n          index={card.position}\n          flipCard={flipCard}\n          flipped={\n            board.opened.indexOf(card.position) !== -1 ||\n            board.matches.indexOf(card.position) !== -1\n          }\n        />\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\n\nconst style = {\n  textAlign: \"center\",\n  borderRadius: \"5px\",\n  background: \"#00743D\",\n  padding: 10,\n  color: \"#fff\",\n  lineHeight: 2\n};\n\nexport default function Score({ matches, total, moves, restartGame }) {\n  return (\n    <div style={style}>\n      <div>\n        {matches === total ? (\n          <>\n            <span role=\"img\" aria-label=\"Tada!\">\n              🎉\n            </span>\n            <button onClick={restartGame}>Restart game</button>\n          </>\n        ) : (\n          `${matches}/${total}`\n        )}\n      </div>\n      Moves: {moves}\n    </div>\n  );\n}\n","import React from \"react\";\nconst style = {\n  background: \"#009951\",\n  borderRadius: \"15px\",\n  padding: 30\n};\nexport default function Table({ children }) {\n  return <div style={style}>{children}</div>;\n}\n","export default [...\"😴😃🎠🚓🚇🐶🌂🐷🦁🐸\"];\n","import SYMBOLS from \"./symbols\";\nimport shuffle from \"lodash.shuffle\";\n\nconst FLIP_CARD = \"FLIP_CARD\";\nconst RESET_GAME = \"RESET_GAME\";\nconst TICK = \"TICK\";\n\nexport function resetGame() {\n  return { type: RESET_GAME };\n}\n\nexport function flipCard(payload) {\n  return { type: FLIP_CARD, payload };\n}\n\nexport function tick() {\n  return { type: TICK };\n}\n\nconst shuffleCards = symbols =>\n  shuffle([...symbols, ...symbols]).map((symbol, index) => ({\n    symbol,\n    position: index\n  }));\n\nexport const initialState = {\n  cards: shuffleCards(SYMBOLS),\n  opened: [],\n  matches: [],\n  moves: 0\n};\n\nexport function gameReducer(state, action) {\n  switch (action.type) {\n    case FLIP_CARD:\n      const { index, tick } = action.payload;\n      if (\n        state.opened.indexOf(index) !== -1 ||\n        state.matches.indexOf(index) !== -1\n      ) {\n        return state;\n      }\n      return {\n        ...state,\n        moves: state.opened.length === 1 ? state.moves + 1 : state.moves,\n        opened: state.opened.length === 2 ? [index] : [...state.opened, index],\n        matches: [\n          ...state.matches,\n          ...(state.opened.length === 1 &&\n          state.cards[state.opened[0]].symbol === state.cards[index].symbol\n            ? [state.opened[0], index]\n            : [])\n        ],\n        tick\n      };\n    case RESET_GAME:\n      return {\n        cards: shuffleCards(SYMBOLS),\n        opened: [],\n        matches: [],\n        moves: 0\n      };\n    case TICK:\n      if (state.opened.length === 2) {\n        return {\n          ...state,\n          opened: []\n        };\n      }\n      return state;\n    default:\n      throw new Error();\n  }\n}\n","import React from \"react\";\nimport Board from \"./Board\";\nimport Score from \"./Score\";\nimport Table from \"./Table\";\nimport { initialState, gameReducer, resetGame, flipCard, tick } from \"./state\";\n\nfunction App() {\n  const [game, dispatch] = React.useReducer(gameReducer, initialState);\n  const restartGame = React.useCallback(() => {\n    dispatch(resetGame());\n  }, []);\n  const clickCard = React.useCallback(\n    index => () => {\n      dispatch(flipCard({ index }));\n    },\n    []\n  );\n  React.useEffect(() => {\n    const timer = setTimeout(() => {\n      dispatch(tick());\n    }, 2000);\n    return () => clearTimeout(timer);\n  }, [game.opened]);\n  return (\n    <Table>\n      <Board flipCard={clickCard} board={game} />\n      <Score\n        matches={game.matches.length}\n        total={game.cards.length}\n        moves={game.moves}\n        restartGame={restartGame}\n      />\n    </Table>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}